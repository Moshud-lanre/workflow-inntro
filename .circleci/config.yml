# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # say-hello:
  #   # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  #   docker:
  #     - image: circleci/node:13.8.0
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Say hello"
  #         command: "echo Hello"
  # say-world:

  #   docker:
  #     - image: circleci/node:13.8.0
    
  #   steps: 
  #     - checkout
  #     - run:
  #         name: "Say world"
  #         command:  "echo World"

  print-name:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - run:
          command: echo $My_name
  
  hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: 
          echo "Testing writing to a file" > output.txt
      - persist_to_workspace:
          root: /tmp/workspace # this can be any root of my liking
          paths:
            - output.txt

  print_output_file:
    docker: 
      - image: circleci/node.13.8.0
    steps: 
      -attach_workspace:
        at: /tmp/workspace
      - run: cat /tmp/workspace/output.txt

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      # - print-name
      # - say-hello
      # - say-world:
      #     requires:
      #       - say-hello
      - hello_world_output
      - print_output_file:
          requires:
            - hello_world_output
